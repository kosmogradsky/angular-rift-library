{"version":3,"sources":["webpack:///C:/Users/Евгений/Code/angular-rift-library/dist/angular-rift/fesm5/angular-rift.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { __assign, __spread } from 'tslib';\nimport { BehaviorSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, Directive, Input, TemplateRef, Component, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar defaultOutletName = 'default';\r\nvar RiftService = /** @class */ (function () {\r\n    function RiftService() {\r\n        this.createdRiftsSubject = new BehaviorSubject({});\r\n        this.createdRifts = this.createdRiftsSubject.asObservable();\r\n    }\r\n    /**\r\n     * @param {?} template\r\n     * @param {?=} outletName\r\n     * @return {?}\r\n     */\r\n    RiftService.prototype.attach = /**\r\n     * @param {?} template\r\n     * @param {?=} outletName\r\n     * @return {?}\r\n     */\r\n    function (template, outletName) {\r\n        if (outletName === void 0) { outletName = defaultOutletName; }\r\n        var _a;\r\n        /** @type {?} */\r\n        var riftsBefore = this.createdRiftsSubject.getValue();\r\n        /** @type {?} */\r\n        var riftsInThatOutlet = riftsBefore[outletName] || [];\r\n        this.createdRiftsSubject.next(__assign({}, riftsBefore, (_a = {}, _a[outletName] = __spread(riftsInThatOutlet, [\r\n            { template: template }\r\n        ]), _a)));\r\n    };\r\n    /**\r\n     * @param {?} templateToDetach\r\n     * @param {?=} outletName\r\n     * @return {?}\r\n     */\r\n    RiftService.prototype.detach = /**\r\n     * @param {?} templateToDetach\r\n     * @param {?=} outletName\r\n     * @return {?}\r\n     */\r\n    function (templateToDetach, outletName) {\r\n        if (outletName === void 0) { outletName = defaultOutletName; }\r\n        var _a;\r\n        /** @type {?} */\r\n        var riftsBefore = this.createdRiftsSubject.getValue();\r\n        /** @type {?} */\r\n        var riftsInThatOutlet = riftsBefore[outletName];\r\n        if (riftsInThatOutlet) {\r\n            this.createdRiftsSubject.next(__assign({}, riftsBefore, (_a = {}, _a[outletName] = riftsInThatOutlet.filter((/**\r\n             * @param {?} rift\r\n             * @return {?}\r\n             */\r\n            function (rift) { return rift.template !== templateToDetach; })), _a)));\r\n        }\r\n    };\r\n    RiftService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    RiftService.ctorParameters = function () { return []; };\r\n    return RiftService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ContentDirective = /** @class */ (function () {\r\n    function ContentDirective(riftService, template) {\r\n        this.riftService = riftService;\r\n        this.template = template;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ContentDirective.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        /** @type {?} */\r\n        var previousValue = changes.riftContent.previousValue;\r\n        /** @type {?} */\r\n        var currentValue = changes.riftContent.currentValue || defaultOutletName;\r\n        if (previousValue !== currentValue) {\r\n            this.riftService.detach(this.template, previousValue);\r\n            if (currentValue) {\r\n                this.riftService.attach(this.template, currentValue);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ContentDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.riftService.detach(this.template, this.riftContent || defaultOutletName);\r\n    };\r\n    ContentDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[riftContent]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    ContentDirective.ctorParameters = function () { return [\r\n        { type: RiftService },\r\n        { type: TemplateRef }\r\n    ]; };\r\n    ContentDirective.propDecorators = {\r\n        riftContent: [{ type: Input }]\r\n    };\r\n    return ContentDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar OutletComponent = /** @class */ (function () {\r\n    function OutletComponent(riftService) {\r\n        this.riftService = riftService;\r\n        this.name = defaultOutletName;\r\n        this.rift$ = this.riftService.createdRifts;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    OutletComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    OutletComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'rift-outlet',\r\n                    template: \"<ng-container *ngIf=\\\"rift$ | async as rifts\\\">\\n  <ng-container *ngFor=\\\"let rift of (rifts[name] || [])\\\">\\n    <ng-container *ngTemplateOutlet=\\\"rift.template\\\"></ng-container>\\n  </ng-container>\\n</ng-container>\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    OutletComponent.ctorParameters = function () { return [\r\n        { type: RiftService }\r\n    ]; };\r\n    OutletComponent.propDecorators = {\r\n        name: [{ type: Input }]\r\n    };\r\n    return OutletComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RiftModule = /** @class */ (function () {\r\n    function RiftModule() {\r\n    }\r\n    RiftModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        ContentDirective,\r\n                        OutletComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    providers: [\r\n                        RiftService\r\n                    ],\r\n                    exports: [\r\n                        ContentDirective,\r\n                        OutletComponent\r\n                    ]\r\n                },] }\r\n    ];\r\n    return RiftModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { defaultOutletName, RiftService, RiftModule, ContentDirective, OutletComponent };\n\n//# sourceMappingURL=angular-rift.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \".rectangle {\\r\\n  border-radius: 10px;\\r\\n  padding: 10px 20px;\\r\\n  max-width: 300px;\\r\\n  margin-top: 8px;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.one {\\r\\n  background-color: aquamarine;\\r\\n}\\r\\n\\r\\n.two {\\r\\n  background-color: beige\\r\\n}\\r\\n\\r\\n.three {\\r\\n  background-color: cornflowerblue;\\r\\n}\\r\\n\\r\\n.four {\\r\\n  background-color: lightcoral;\\r\\n}\\r\\n\\r\\n.five {\\r\\n  background-color: powderblue;\\r\\n}\\r\\n\\r\\n.outlet-one {\\r\\n  background-color: orange;\\r\\n}\\r\\n\\r\\n.outlet-two {\\r\\n  background-color: violet;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2FuZ3VsYXItcmlmdC1leGFtcGxlL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJwcm9qZWN0cy9hbmd1bGFyLXJpZnQtZXhhbXBsZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlY3RhbmdsZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgbWF4LXdpZHRoOiAzMDBweDtcclxuICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcblxyXG4ub25lIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhbWFyaW5lO1xyXG59XHJcblxyXG4udHdvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBiZWlnZVxyXG59XHJcblxyXG4udGhyZWUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNvcm5mbG93ZXJibHVlO1xyXG59XHJcblxyXG4uZm91ciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjb3JhbDtcclxufVxyXG5cclxuLmZpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHBvd2RlcmJsdWU7XHJcbn1cclxuXHJcbi5vdXRsZXQtb25lIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuXHJcbi5vdXRsZXQtdHdvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2aW9sZXQ7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"rectangle one\\\">\\r\\n  <span>RectangleOne</span>\\r\\n  <div class=\\\"rectangle two\\\">\\r\\n    <span>RectangeTwo</span>\\r\\n    <div class=\\\"rectangle three\\\" *riftContent>\\r\\n      <span>RectangeThree</span>\\r\\n      <div class=\\\"rectangle four\\\">\\r\\n        <span>RectangeFour</span>\\r\\n        <div class=\\\"rectangle five\\\" *riftContent=\\\"'outletTwo'\\\">\\r\\n          RectangleFive\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div>RectangleThree is displayed inside RiftOutletOne even though it is defined as a child of RectangeTwo</div>\\r\\n\\r\\n<div class=\\\"rectangle outlet-one\\\">\\r\\n  <span>RiftOutletOne</span>\\r\\n  <rift-outlet></rift-outlet>\\r\\n</div>\\r\\n\\r\\n<div>RectangleFive is displayed inside RiftOutletTwo even though it is defined as a child of RectangeFour</div>\\r\\n\\r\\n<div class=\\\"rectangle outlet-two\\\">\\r\\n  <span>RiftOutletTwo</span>\\r\\n  <rift-outlet name=\\\"outletTwo\\\"></rift-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.css'],\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RiftModule } from 'angular-rift';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RiftModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}